# TODO: 
# 1. add cache support.
# 2. add different builds for x86/x64.
# 3. check for updates weekly.
# 4. copy files from assets to Debug/Release

trigger:
- master

jobs:
  - job: "Build"
    strategy:
      matrix:
        linux:
          Image: 'ubuntu-latest'
          vpath: "/usr/local/share/vcpkg/installed/x64-linux"
          lua_inc: "/usr/local/share/vcpkg/installed/x64-linux/include"
          lua_lib: "/usr/local/share/vcpkg/installed/x64-linux/lib"
          sdl_dir: "/usr/local/share/vcpkg/installed/x64-linux/share/sdl2"
          triplet: x64-linux
        windows:
          Image: 'windows-latest'
          vpath: "C:\\vcpkg\\installed\\x64-windows"
          lua_inc: "C:\\vcpkg\\installed\\x64-windows\\include"
          lua_lib: "C:\\vcpkg\\installed\\x64-windows\\lib"
          sdl_dir: "C:\\vcpkg\\installed\\x64-windows\\share\\sdl2"
          triplet: x64-windows
        mac:
          Image: 'macos-latest'
          vpath: "/usr/local/share/vcpkg/installed/x64-osx"
          lua_inc: "/usr/local/share/vcpkg/installed/x64-osx/include"
          lua_lib: "/usr/local/share/vcpkg/installed/x64-osx/lib"
          sdl_dir: "/usr/local/share/vcpkg/installed/x64-osx/share/sdl2"
          triplet: x64-osx
      maxParallel: 4
    variables:
      VCPKG_DEFAULT_TRIPLET: $(triplet)
      LUA_INCLUDE_DIR: $(lua_inc)
      LUA_LIBRARIES: $(lua_lib)
      SDL2_DIR: $(sdl_dir)
    
    pool:
      vmImage: $(Image)
    
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          vcpkg install sdl2 sdl2-image sdl2-image[libjpeg-turbo] sdl2-image[tiff] sdl2-image[libwebp] sdl2-mixer sdl2-mixer[dynamic-load] sdl2-mixer[libflac] sdl2-mixer[mpg123] sdl2-mixer[libmodplug] sdl2-mixer[libvorbis] sdl2-mixer[opusfile] sdl2-ttf nlohmann-json sol2 fmt
          vcpkg integrate install
    - task: CMake@1
      inputs:
        cmakeArgs: '..'
    displayName: 'Get dependencies for '

  - job: "MSBuild_Windows"
    dependsOn: Build
    condition: succeeded()
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: VSBuild@1
      inputs:
        solution: 'build\TnT.sln'
        platform: 'x64'
        configuration: 'Debug'
        clean: true
        maximumCpuCount: true
        msbuildArchitecture: 'x64'
        createLogFile: true
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'assets'
        Contents: '**'
        TargetFolder: 'build/Debug'
    - task: VSBuild@1
      inputs:
        solution: 'build\TnT.sln'
        vsVersion: 'latest'
        platform: 'x64'
        configuration: 'Release'
        clean: true
        maximumCpuCount: true
        msbuildArchitecture: 'x64'
        createLogFile: true
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'assets'
        Contents: '**'
        TargetFolder: 'build/Release'