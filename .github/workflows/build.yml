# (DONE) find a way to add SDL2 to the build system.
# (DONE) find a way to check if there is a new version of the dependencies and update automatically.
# (DONE) handle vcpkg actions better.
# (DONE) consider building all the dependencies in a single action.
# (DONE) using env: set vcpkg triplet to x64.
# (DONE) build vcpkg on macosx after downloading.
# (DONE) add more os-es and more build configurations.
# (DONE) actions/cache knows there is some cache saved, but still runs downlod process.


# TODO:
# 1. The runner on Windows doesn't know the location of vcvars64.bat. Add that to the PATH using env:.
# 2. Use PVS-Studio for statical analysis on every commit.
# 3. Move containings of assets folder to the binary folder.
# 4. Add support for x86 builds.

name: build
on: ["push", "pull_request"]

jobs:
    get-dependencies:
        name: ${{ matrix.os }}-dependencies
        runs-on: ${{ matrix.os }}
        strategy:
          fail-fast: false
          matrix:
            os: [windows-latest, ubuntu-latest , macos-latest]
            include:
              - os: windows-latest
                triplet: x64-windows
                vcpkg-path: "C:\\vcpkg\\installed\\x64-windows"
                run: |
                     mkdir build && cd build
                     cmake ..
                     vcvars64.bat
                     msbuild TnT.sln /p:Platform=x64
                     msbuild TnT.sln /p:Configuration=Release /p:Platform=x64
                     robocopy ..\assets .\Release
              - os: ubuntu-latest
                triplet: x64-linux
                vcpkg-path: "/usr/local/share/vcpkg/installed/x64-linux"
                run: |
                    mkdir build && cd build
                    cmake ..
              - os: macos-latest
                vcpkg-path: "/usr/local/share/vcpkg/installed/x64-osx"
                triplet: x64-osx
                run: |
                    mkdir build && cd build
                    cmake ..


        steps:
          - name: Cache packages
            uses: actions/cache@v1.1.2
            id: pack-cache
            with:
             path: ${{ matrix.vcpkg-path }}
             key: ${{ matrix.os }}-dependencies
          - name: Get dependencies using vcpkg
            env:
              VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
            if: steps.pack-cache.outputs.cache-hit != 'true'
            run: |
                vcpkg install fmt sol2 nlohmann-json sdl2 sdl2-image sdl2-mixer sdl2-ttf sdl2-net
                vcpkg integrate install
          - name: Build TnT
            run: ${{ matrix.run }}
